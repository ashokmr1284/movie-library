{"version":3,"sources":["Components/Header.jsx","Components/AccordionItem.jsx","Components/AgeIndicator.jsx","Components/Quotes.jsx","Components/GratitudeList.jsx","Components/MorningCheckList.jsx","Components/EveningCheckList.jsx","Components/YearGoals.jsx","Components/TopYearGoals.jsx","Components/MonthEndGoals.jsx","Components/WeekEndGoals.jsx","Components/ToDoList.jsx","Components/NightCheckList.jsx","Components/App.jsx","Components/HabitTracker.jsx","Components/WorkGround.jsx","Components/AppContainer.jsx","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","navBar","width","padding10","padding","Header","props","React","useState","navBarOpen","setNavbarOpen","selectedDate","setSelectedDate","classes","toggleNavBarOpen","AppBar","Toolbar","IconButton","edge","className","menuButton","color","aria-label","onClick","Typography","variant","aria-controls","aria-haspopup","Drawer","open","onClose","DatePicker","margin","id","format","label","value","onChange","date","localStorageObj","JSON","parse","localStorage","getItem","moment","setGratitudeList","gratitudeList","setMotherCare","motherCare","setTodayFeeling","todayFeeling","setMeditationCheck","meditationCheck","setExerciseCheck","exerciseCheck","setYearGoalsList","yearGoalsList","setYearTopGoalsList","yearTopGoalsList","setMonthGoalsList","monthGoalsList","setWeekGoalsList","weekGoalsList","setTodoList","todoList","setLegMassage","legMassage","setMotherExercise","motherExercise","setSunScreenMorCheck","sunScreenMorCheck","setSunScreenEveCheck","sunScreenEveCheck","setRawVegIntakeCheck","rawVegIntakeCheck","setWaterCheck","waterCheck","setRetinaCheck","retinaCheck","setSoakDhaniya","soakDhaniya","setNiceToday","niceToday","setRateUrself","rateUrself","setWasIBestCheck","wasIBestCheck","setBookOrQuizCheck","bookOrQuizCheck","setMtbCheck","mtbCheck","setMusicCheck","musicCheck","setWasYesterdayJealous","wasYesterdayJealous","group","KeyboardButtonProps","MenuItem","history","push","heading","fontSize","typography","pxToRem","fontWeight","AccordionItem","Accordion","expanded","panelId","handleAccordionChange","AccordionSummary","expandIcon","headLine","AccordionDetails","children","root","paddingBottom","years","paddingRight","seconds","paddingTop","AgeIndicator","year","setYear","milliSecs","setMilliSecs","dob","yearFormattedDob","Date","getFullYear","millSecFormattedDob","Math","floor","getTime","setInterval","now","currentYear","millSeconds","Grid","container","justify","spacing","align","display","Quotes","settings","dots","infinite","speed","autoplaySpeed","mainPage","slidesToShow","slidesToScroll","autoplay","arrows","quote","textAlign","fontStyle","fontWeightBold","outline","quotesList","length","map","buttonHolder","justifyContent","flexDirection","deletIcon","cursor","GratitudeList","handleChange","e","target","list","item","xs","Button","startIcon","size","listItem","index","TextField","fullWidth","InputProps","endAdornment","InputAdornment","position","splice","handleDelete","marginTop15","marginTop","MorningCheckList","placeholder","FormGroup","row","FormControlLabel","control","Switch","checked","EveningCheckList","YearGoals","TopYearGoals","Autocomplete","options","getOptionLabel","option","selectedItem","renderInput","params","subHeading","MonthEndGoals","categoryListItem","md","handleClick","idx","WeekEndGoals","ToDoList","NightCheckList","today","paper","height","paddingTop30","dateHolder","background","borderRadius","mainContainer","backgroundColor","saveButtonHolder","App","setExpanded","useEffect","wakeLock","requestWakeLock","a","navigator","request","addEventListener","console","log","error","name","message","document","visibilityState","release","panel","event","isExpanded","Container","maxWidth","saveObj","setItem","stringify","HabitTracker","WorkGround","createMuiTheme","palette","primary","main","AppContainer","utils","MomentUtils","ThemeProvider","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e13f96f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Drawer,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navBar: {\r\n    \"& li\": {\r\n      width: \"250px\",\r\n    },\r\n  },\r\n  padding10: {\r\n    \"& label\": {\r\n      padding: \"10px\",\r\n    },\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const [navBarOpen, setNavbarOpen] = React.useState(false);\r\n\r\n  const selectedDate = props.selectedDate,\r\n    setSelectedDate = props.setSelectedDate;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (date) => {\r\n    const localStorageObj = JSON.parse(\r\n      localStorage.getItem(moment(date).format(\"DDMMYYYY\"))\r\n    );\r\n    if (localStorageObj) {\r\n      props.setGratitudeList(localStorageObj.gratitudeList);\r\n      props.setMotherCare(localStorageObj.motherCare);\r\n      props.setTodayFeeling(localStorageObj.todayFeeling);\r\n      props.setMeditationCheck(localStorageObj.meditationCheck);\r\n      props.setExerciseCheck(localStorageObj.exerciseCheck);\r\n      props.setYearGoalsList(localStorageObj.yearGoalsList);\r\n      props.setYearTopGoalsList(localStorageObj.yearTopGoalsList);\r\n      props.setMonthGoalsList(localStorageObj.monthGoalsList);\r\n      props.setWeekGoalsList(localStorageObj.weekGoalsList);\r\n      props.setTodoList(localStorageObj.todoList);\r\n      props.setLegMassage(localStorageObj.legMassage);\r\n      props.setMotherExercise(localStorageObj.motherExercise);\r\n      props.setSunScreenMorCheck(localStorageObj.sunScreenMorCheck);\r\n      props.setSunScreenEveCheck(localStorageObj.sunScreenEveCheck);\r\n      props.setRawVegIntakeCheck(localStorageObj.rawVegIntakeCheck);\r\n      props.setWaterCheck(localStorageObj.waterCheck);\r\n      props.setRetinaCheck(localStorageObj.retinaCheck);\r\n      props.setSunScreenEveCheck(localStorageObj.sunScreenEveCheck);\r\n      props.setSoakDhaniya(localStorageObj.soakDhaniya);\r\n      props.setNiceToday(localStorageObj.niceToday);\r\n      props.setRateUrself(localStorageObj.rateUrself);\r\n      props.setWasIBestCheck(localStorageObj.wasIBestCheck);\r\n      props.setBookOrQuizCheck(localStorageObj.bookOrQuizCheck);\r\n      props.setMtbCheck(localStorageObj.mtbCheck);\r\n      props.setMusicCheck(localStorageObj.musicCheck);\r\n      props.setWasYesterdayJealous(localStorageObj.wasYesterdayJealous);\r\n    } else {\r\n      props.setGratitudeList([{ value: \"\", label: \"I'm Grateful for\" }]);\r\n      props.setMotherCare(\"\");\r\n      props.setTodayFeeling(\"\");\r\n      props.setMeditationCheck(false);\r\n      props.setExerciseCheck(false);\r\n      props.setYearGoalsList([\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n      ]);\r\n      props.setYearTopGoalsList([\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n        { value: \"\", label: \"By this year end, I'll achieve\" },\r\n      ]);\r\n      props.setMonthGoalsList([\r\n        { value: \"\", label: \"I'll achieve\", group: 0 },\r\n        { value: \"\", label: \"I'll achieve\", group: 0 },\r\n        { value: \"\", label: \"I'll achieve\", group: 1 },\r\n        { value: \"\", label: \"I'll achieve\", group: 1 },\r\n        { value: \"\", label: \"I'll achieve\", group: 2 },\r\n        { value: \"\", label: \"I'll achieve\", group: 2 },\r\n      ]);\r\n      props.setWeekGoalsList([\r\n        { value: \"\", label: \"I'll finish\", group: 0 },\r\n        { value: \"\", label: \"I'll finish\", group: 0 },\r\n        { value: \"\", label: \"I'll finish\", group: 1 },\r\n        { value: \"\", label: \"I'll finish\", group: 1 },\r\n        { value: \"\", label: \"I'll finish\", group: 2 },\r\n        { value: \"\", label: \"I'll finish\", group: 2 },\r\n      ]);\r\n      props.setTodoList([\r\n        { value: \"\", label: \"I'll do\", group: 0 },\r\n        { value: \"\", label: \"I'll do\", group: 0 },\r\n        { value: \"\", label: \"I'll do\", group: 1 },\r\n        { value: \"\", label: \"I'll do\", group: 1 },\r\n        { value: \"\", label: \"I'll do\", group: 2 },\r\n        { value: \"\", label: \"I'll do\", group: 2 },\r\n      ]);\r\n      props.setLegMassage(false);\r\n      props.setMotherExercise(false);\r\n      props.setSunScreenMorCheck(false);\r\n      props.setSunScreenEveCheck(false);\r\n      props.setRawVegIntakeCheck(false);\r\n      props.setWaterCheck(false);\r\n      props.setRetinaCheck(false);\r\n      props.setSoakDhaniya(false);\r\n      props.setNiceToday(\"\");\r\n      props.setRateUrself(\"\");\r\n      props.setWasIBestCheck(false);\r\n      props.setBookOrQuizCheck(false);\r\n      props.setMtbCheck(false);\r\n      props.setMusicCheck(false);\r\n      props.setWasYesterdayJealous(false);\r\n    }\r\n\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const toggleNavBarOpen = () => {\r\n    setNavbarOpen(!navBarOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleNavBarOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Soldier: Calm is a Super Power\r\n          </Typography>\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            //onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        open={navBarOpen}\r\n        onClose={() => toggleNavBarOpen(false)}\r\n        className={classes.navBar}\r\n      >\r\n        <DatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          variant=\"inline\"\r\n          format=\"DD/MM/YYYY\"\r\n          label=\"Choose Date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          className={classes.padding10}\r\n        />\r\n        <MenuItem onClick={() => props.history.push(\"/\")}>Dashboard</MenuItem>\r\n        <MenuItem onClick={() => props.history.push(\"/habit\")}>\r\n          Habit Tracker\r\n        </MenuItem>\r\n        <MenuItem onClick={() => props.history.push(\"/workground\")}>\r\n          Work Ground\r\n        </MenuItem>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: \"bold\",\r\n    color: \"#5a5a5a\",\r\n  },\r\n}));\r\n\r\nexport default function AccordionItem(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Accordion\r\n      expanded={props.expanded === props.panelId}\r\n      onChange={props.handleAccordionChange(props.panelId)}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel2a-content\"\r\n        id=\"panel2a-header\"\r\n      >\r\n        <Typography className={classes.heading}>{props.headLine}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>{props.children}</AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Typography, makeStyles, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingBottom: \"20px\",\r\n  },\r\n  years: {\r\n    fontWeight: \"bold\",\r\n    paddingRight: \"2px\",\r\n  },\r\n  seconds: {\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"20px\",\r\n  },\r\n}));\r\n\r\nexport default function AgeIndicator(props) {\r\n  const classes = useStyles();\r\n  const [year, setYear] = useState(0);\r\n  const [milliSecs, setMilliSecs] = useState(0);\r\n  var dob = props.dob;\r\n  var yearFormattedDob = new Date(dob).getFullYear();\r\n  var millSecFormattedDob = Math.floor(new Date(dob).getTime() / 100);\r\n\r\n  // Update the count down every 1 second\r\n  var x = setInterval(function () {\r\n    // Get today's date and time\r\n    var now = new Date();\r\n    var currentYear = now.getFullYear();\r\n    var currentMillSeconds = Math.floor(now.getTime() / 100);\r\n\r\n    // Time calculations for days, hours, minutes and seconds\r\n    //var years = Math.floor(distance / (1000 * 60 * 60 * 24 * 365));\r\n    var years = currentYear - yearFormattedDob;\r\n    var millSeconds = currentMillSeconds - millSecFormattedDob;\r\n\r\n    setYear(years);\r\n    setMilliSecs(millSeconds);\r\n    // Output the result in an element with id=\"demo\"\r\n\r\n    // document.getElementById(\"years\").innerHTML = years;\r\n    // document.getElementById(\"milliSeconds\").innerHTML = \".\" + millSeconds;\r\n  }, 1);\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={2} className={classes.root}>\r\n      <Typography\r\n        id=\"years\"\r\n        variant=\"h1\"\r\n        align=\"center\"\r\n        display=\"inline\"\r\n        className={classes.years}\r\n      >\r\n        {year}\r\n      </Typography>\r\n      <Typography\r\n        id=\"milliSeconds\"\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        display=\"inline\"\r\n        className={classes.seconds}\r\n      >{`.${milliSecs}`}</Typography>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n//Material UI Components\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\n\r\n{\r\n  /* \r\n          Do something everyday to achieve your goals\r\n          If you aren't willing to work for it, don't complain about not having it\r\n          If you are willing to do the work, you can have anything\r\n          Not making mistakes is your biggest mistake\r\n          Doubt is removed only by action\r\n          \r\n          <Typography variant=\"subtitle2\">\r\n            What is Sacrifice? - When you have to choose your Family over your Dreams.\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            Never Sacrifice your family on the altar of Success, Even if you succeed you FAIL.\r\n          </Typography> \r\n          <Typography variant=\"subtitle2\">\r\n            The Measure of Man's Heart lies in what he's willing to sacrifice for his family.\r\n          </Typography> \r\n          <Typography variant=\"subtitle2\">\r\n          Never sacrifice your family. They are the most importnat thing in life.\r\n          </Typography>*/\r\n}\r\n\r\nexport default function Quotes(props) {\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 1000,\r\n    autoplaySpeed: props.mainPage ? 6000 : 5000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    arrows: false,\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    quote: {\r\n      textAlign: props.mainPage ? \"center\" : \"left\",\r\n      fontStyle: \"italic\",\r\n      \"& h6\": {\r\n        fontSize: props.mainPage ? \"1rem\" : \"0.875rem\",\r\n        fontWeight: props.mainPage ? theme.typography.fontWeightBold : \"normal\",\r\n        paddingBottom: props.mainPage ? \"0px\" : \"10px\",\r\n        \"&:focus\": {\r\n          outline: \"none !important\",\r\n        },\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const quotesList = props.quotesList;\r\n  return (\r\n    <Slider {...settings} className={classes.quote}>\r\n      {quotesList && quotesList.length > 0\r\n        ? quotesList.map((quote) => {\r\n            return <Typography variant=\"subtitle2\">{quote}</Typography>;\r\n          })\r\n        : null}\r\n    </Slider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function GratitudeList(props) {\r\n  // const [gratitudeList, setGratitudeList] = useState([\r\n  //   { value: \"\", label: \"I'm Grateful for\" },\r\n  // ]);\r\n  const classes = useStyles();\r\n  const gratitudeList = props.gratitudeList,\r\n    setGratitudeList = props.setGratitudeList;\r\n\r\n  const handleClick = () => {\r\n    const list = [...gratitudeList, { value: \"\", label: \"I'm Grateful for\" }];\r\n    setGratitudeList(list);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const id = e.target.id;\r\n    const value = e.target.value;\r\n    const list = [...gratitudeList];\r\n    list[id].value = value;\r\n    setGratitudeList(list);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const list = [...gratitudeList];\r\n    list.splice(index, 1);\r\n    setGratitudeList(list);\r\n  };\r\n\r\n  const quotesList = [\r\n    \"Remember you've born for a purpose which is to serve your Mother\",\r\n    \"Only truth in this world is Parents (Mother)\",\r\n    \"Family always comes first\",\r\n    \"Never sacrifice your family. They are the most important thing in life.\",\r\n    \"Start each day with a Positive thought and a grateful heart.\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={8}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <div className={classes.buttonHolder}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleClick}\r\n            startIcon={<AddIcon />}\r\n            size=\"small\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n      {gratitudeList && gratitudeList.length > 0\r\n        ? gratitudeList.map((listItem, index) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id={index}\r\n                  label={listItem.label}\r\n                  value={listItem.value}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment\r\n                        position=\"end\"\r\n                        onClick={() => handleDelete(index)}\r\n                        className={classes.deletIcon}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Switch,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginTop15: {\r\n    marginTop: \"15px\",\r\n  },\r\n}));\r\n\r\nexport default function MorningCheckList(props) {\r\n  const classes = useStyles();\r\n\r\n  const motherCare = props.motherCare,\r\n    setMotherCare = props.setMotherCare,\r\n    todayFeeling = props.todayFeeling,\r\n    setTodayFeeling = props.setTodayFeeling,\r\n    meditationCheck = props.meditationCheck,\r\n    setMeditationCheck = props.setMeditationCheck,\r\n    exerciseCheck = props.exerciseCheck,\r\n    setExerciseCheck = props.setExerciseCheck,\r\n    setSunScreenMorCheck = props.setSunScreenMorCheck,\r\n    sunScreenMorCheck = props.sunScreenMorCheck;\r\n\r\n  const quotesList = [\r\n    \"The goal of meditation isn't to control your thoughts, its to stop letting them control you\",\r\n    \"All the problems so far faced is because of mind/thoughts, Take control over it\",\r\n    \"Don't let your little thoughts stop your BIG dreams\",\r\n    \"Meditate so that my mind cannot complicate my life\",\r\n    \"Listen, Smile, Agree, and then work hard for whatever you want for\",\r\n    \"The world is a mirror, smile and it will smile back\",\r\n    \"Everyday is another oppurtunity to get closer to my goals\",\r\n    \"Train your mind to be calm in every situation\",\r\n    \"If there is no enemy within, the enemy outside can do us no harm\",\r\n    \"Treat people/family members way you want to be treated\",\r\n    \"I'm solely responsible for all the jou and sorrow in my life\",\r\n    \"Before you speak, let your words pass through three gates: Is it True? Is it necessary? Is it kind?\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id=\"standard4\"\r\n          label=\"Will I Take Good Care of Mother? \"\r\n          value={motherCare}\r\n          onChange={(e) => setMotherCare(e.target.value)}\r\n          //placeholder=\"Mother, Family, Sister, Niece \"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id=\"standard5\"\r\n          label=\"How do I want to feel today?\"\r\n          placeholder=\"Joyous, Calm, Energetic, Caring, etc \"\r\n          value={todayFeeling}\r\n          onChange={(e) => setTodayFeeling(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormGroup row className={classes.marginTop15}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={meditationCheck}\r\n                onChange={(e) => setMeditationCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Meditation Check (Mind)\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={exerciseCheck}\r\n                onChange={(e) => setExerciseCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Exercise Check (Body)\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={sunScreenMorCheck}\r\n                onChange={(e) => setSunScreenMorCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Face sunscreen & body lotion check\"\r\n          />\r\n        </FormGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Switch,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginTop15: {\r\n    marginTop: \"15px\",\r\n  },\r\n}));\r\n\r\nexport default function EveningCheckList(props) {\r\n  const classes = useStyles();\r\n\r\n  const sunScreenEveCheck = props.sunScreenEveCheck,\r\n    setSunScreenEveCheck = props.setSunScreenEveCheck,\r\n    rawVegIntakeCheck = props.rawVegIntakeCheck,\r\n    setRawVegIntakeCheck = props.setRawVegIntakeCheck,\r\n    waterCheck = props.waterCheck,\r\n    setWaterCheck = props.setWaterCheck;\r\n\r\n  const quotesList = [\r\n    \"The goal of meditation isn't to control your thoughts, its to stop letting them control you\",\r\n    \"All the problems so far faced is because of mind/thoughts, Take control over it\",\r\n    \"Don't let your little thoughts stop your BIG dreams\",\r\n    \"Meditate so that my mind cannot complicate my life\",\r\n    \"Listen, Smile, Agree, and then work hard for whatever you want for\",\r\n    \"The world is a mirror, smile and it will smile back\",\r\n    \"Everyday is another oppurtunity to get closer to my goals\",\r\n    \"Train your mind to be calm in every situation\",\r\n    \"If there is no enemy within, the enemy outside can do us no harm\",\r\n    \"Treat people/family members way you want to be treated\",\r\n    \"I'm solely responsible for all the jou and sorrow in my life\",\r\n    \"Before you speak, let your words pass through three gates: Is it True? Is it necessary? Is it kind?\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormGroup row className={classes.marginTop15}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={sunScreenEveCheck}\r\n                onChange={(e) => setSunScreenEveCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Evening face sunscreen check\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={rawVegIntakeCheck}\r\n                onChange={(e) => setRawVegIntakeCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Did we intake raw vegetables or fruits today with food?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={waterCheck}\r\n                onChange={(e) => setWaterCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Did I drink enough water today?\"\r\n          />\r\n        </FormGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function YearGoals(props) {\r\n  const classes = useStyles();\r\n  const yearGoalsList = props.yearGoalsList,\r\n    setYearGoalsList = props.setYearGoalsList;\r\n\r\n  const handleClick = () => {\r\n    const list = [\r\n      ...yearGoalsList,\r\n      { value: \"\", label: \"By this year end, I'll achieve\" },\r\n    ];\r\n    setYearGoalsList(list);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const id = e.target.id;\r\n    const value = e.target.value;\r\n    const list = [...yearGoalsList];\r\n    list[id].value = value;\r\n    setYearGoalsList(list);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const list = [...yearGoalsList];\r\n    list.splice(index, 1);\r\n    setYearGoalsList(list);\r\n  };\r\n\r\n  const quotesList = [\r\n    \"Risk more than others think is safe. Dream more than others think is practical\",\r\n    \"Goal without a plan is just a Wish\",\r\n    \"If plan doesn't work, change the plan, not the goal\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={8}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <div className={classes.buttonHolder}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleClick}\r\n            startIcon={<AddIcon />}\r\n            size=\"small\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n      {yearGoalsList && yearGoalsList.length > 0\r\n        ? yearGoalsList.map((listItem, index) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id={index}\r\n                  label={listItem.label}\r\n                  fullWidth\r\n                  value={listItem.value}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment\r\n                        position=\"end\"\r\n                        onClick={() => handleDelete(index)}\r\n                        className={classes.deletIcon}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function TopYearGoals(props) {\r\n  const yearGoalsList = props.yearGoalsList,\r\n    yearTopGoalsList = props.yearTopGoalsList,\r\n    setYearTopGoalsList = props.setYearTopGoalsList;\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e, selectedItem, index) => {\r\n    const list = [...yearTopGoalsList];\r\n    list[index].value = selectedItem.value;\r\n    setYearTopGoalsList(list);\r\n  };\r\n\r\n  const quotesList = [    \r\n    \"A Fool with a plan is better than a genius without one\",\r\n    \"Planning is a skill and art of journey which needs regular optimizations to progress and keep you in track\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n\r\n      {yearTopGoalsList && yearTopGoalsList.length > 0\r\n        ? yearTopGoalsList.map((listItem, index) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={yearGoalsList}\r\n                  getOptionLabel={(option) => option.value}\r\n                  value={listItem}\r\n                  onChange={(e, selectedItem) =>\r\n                    handleChange(e, selectedItem, index)\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"By this year end, No matter what - I'll achieve\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  subHeading: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function MonthEndGoals(props) {\r\n  const yearTopGoalsList = props.yearTopGoalsList,\r\n    monthGoalsList = props.monthGoalsList,\r\n    setMonthGoalsList = props.setMonthGoalsList;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (index) => {\r\n    const list = [\r\n      ...monthGoalsList,\r\n      { value: \"\", label: \"I'll achieve\", group: index },\r\n    ];\r\n    setMonthGoalsList(list);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const id = e.target.id;\r\n    const value = e.target.value;\r\n    const list = [...monthGoalsList];\r\n    list[id].value = value;\r\n    setMonthGoalsList(list);\r\n  };\r\n\r\n  const handleDelete = (idx) => {\r\n    const list = [...monthGoalsList];\r\n    list.splice(idx, 1);\r\n    setMonthGoalsList(list);\r\n  };\r\n\r\n  const quotesList = [\r\n    \"Never giveup on something you can't go a day without thinking about\",\r\n    \"If its is Important to you, You will find a way. If not, you'll find an Excuse\",\r\n    \"You always have time for the things you put first\",\r\n    \"There are no Problems, its always a challenges\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      {yearTopGoalsList && yearTopGoalsList.length > 0\r\n        ? yearTopGoalsList.map((categoryListItem, index) => {\r\n            return (\r\n              <Grid item xs={12} md={4}>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <Typography className={classes.subHeading}>\r\n                      {categoryListItem.value}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <div className={classes.buttonHolder}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => handleClick(index)}\r\n                        startIcon={<AddIcon />}\r\n                        size=\"small\"\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </Grid>\r\n                  {monthGoalsList && monthGoalsList.length > 0\r\n                    ? monthGoalsList.map((listItem, idx) => {\r\n                        if (listItem.group === index) {\r\n                          return (\r\n                            <TextField\r\n                              id={idx}\r\n                              label={listItem.label}\r\n                              value={listItem.value}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment\r\n                                    position=\"end\"\r\n                                    onClick={() => handleDelete(idx)}\r\n                                    className={classes.deletIcon}\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  subHeading: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function WeekEndGoals(props) {\r\n  const yearTopGoalsList = props.yearTopGoalsList,\r\n    weekGoalsList = props.weekGoalsList,\r\n    setWeekGoalsList = props.setWeekGoalsList;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (index) => {\r\n    const list = [\r\n      ...weekGoalsList,\r\n      { value: \"\", label: \"I'll finish\", group: index },\r\n    ];\r\n    setWeekGoalsList(list);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const id = e.target.id;\r\n    const value = e.target.value;\r\n    const list = [...weekGoalsList];\r\n    list[id].value = value;\r\n    setWeekGoalsList(list);\r\n  };\r\n\r\n  const handleDelete = (idx) => {\r\n    const list = [...weekGoalsList];\r\n    list.splice(idx, 1);\r\n    setWeekGoalsList(list);\r\n  };\r\n\r\n  const quotesList = [\r\n    \"Things which matter most must never be at the mercy of things which matter least.\",\r\n    \"If its is Important to you, You will find a way. If not, you'll find an Excuse\",\r\n    \"You always have time for the things you put first\",\r\n    \"There are no Problems, its always a challenges\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      {yearTopGoalsList && yearTopGoalsList.length > 0\r\n        ? yearTopGoalsList.map((categoryListItem, index) => {\r\n            return (\r\n              <Grid item xs={12} md={4}>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <Typography className={classes.subHeading}>\r\n                      {categoryListItem.value}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <div className={classes.buttonHolder}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => handleClick(index)}\r\n                        startIcon={<AddIcon />}\r\n                        size=\"small\"\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </Grid>\r\n                  {weekGoalsList && weekGoalsList.length > 0\r\n                    ? weekGoalsList.map((listItem, idx) => {\r\n                        if (listItem.group === index) {\r\n                          return (\r\n                            <TextField\r\n                              id={idx}\r\n                              label={listItem.label}\r\n                              value={listItem.value}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment\r\n                                    position=\"end\"\r\n                                    onClick={() => handleDelete(idx)}\r\n                                    className={classes.deletIcon}\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  InputAdornment,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  deletIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  subHeading: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function ToDoList(props) {\r\n  const yearTopGoalsList = props.yearTopGoalsList,\r\n    todoList = props.todoList,\r\n    setTodoList = props.setTodoList;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (index) => {\r\n    const list = [...todoList, { value: \"\", label: \"I'll do\", group: index }];\r\n    setTodoList(list);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const id = e.target.id;\r\n    const value = e.target.value;\r\n    const list = [...todoList];\r\n    list[id].value = value;\r\n    setTodoList(list);\r\n  };\r\n\r\n  const handleDelete = (idx) => {\r\n    const list = [...todoList];\r\n    list.splice(idx, 1);\r\n    setTodoList(list);\r\n  };\r\n\r\n  const quotesList = [\r\n    \"Its not yesterday or tomorrow, its today, nowwwwwwwwwwww........\",\r\n    \"Things which matter most must never be at the mercy of things which matter least.\",\r\n    \"If its is Important to you, You will find a way. If not, you'll find an Excuse\",\r\n    \"You always have time for the things you put first\",\r\n    \"There are no Problems, its always a challenges\",\r\n    \"Forget Yesterday - It has already forgotten you\",\r\n    \"Don't sweat tomorrow - you haven't even met\",\r\n    \"Instead, open your eyes and heart to a truly precious oppurtunity - Today\",\r\n    \"Don't talk, Act. Don't say, Show. Don't Promise, Prove\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      {yearTopGoalsList && yearTopGoalsList.length > 0\r\n        ? yearTopGoalsList.map((categoryListItem, index) => {\r\n            return (\r\n              <Grid item xs={12} md={4}>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <Typography className={classes.subHeading}>\r\n                      {categoryListItem.value}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <div className={classes.buttonHolder}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => handleClick(index)}\r\n                        startIcon={<AddIcon />}\r\n                        size=\"small\"\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </Grid>\r\n                  {todoList && todoList.length > 0\r\n                    ? todoList.map((listItem, idx) => {\r\n                        if (listItem.group === index) {\r\n                          return (\r\n                            <TextField\r\n                              id={idx}\r\n                              label={listItem.label}\r\n                              value={listItem.value}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <InputAdornment\r\n                                    position=\"end\"\r\n                                    onClick={() => handleDelete(idx)}\r\n                                    className={classes.deletIcon}\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })\r\n        : null}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Switch,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n//sub component\r\nimport Quotes from \"./Quotes\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginTop15: {\r\n    marginTop: \"15px\",\r\n  },\r\n}));\r\n\r\nexport default function NightCheckList(props) {\r\n  const legMassage = props.legMassage,\r\n    setLegMassage = props.setLegMassage,\r\n    motherExercise = props.motherExercise,\r\n    setMotherExercise = props.setMotherExercise,\r\n    soakDhaniya = props.soakDhaniya,\r\n    setSoakDhaniya = props.setSoakDhaniya,\r\n    retinaCheck = props.retinaCheck,\r\n    setRetinaCheck = props.setRetinaCheck,\r\n    niceToday = props.niceToday,\r\n    setNiceToday = props.setNiceToday,\r\n    rateUrself = props.rateUrself,\r\n    setRateUrself = props.setRateUrself,\r\n    wasIBestCheck = props.wasIBestCheck,\r\n    setWasIBestCheck = props.setWasIBestCheck,\r\n    bookOrQuizCheck = props.bookOrQuizCheck,\r\n    setBookOrQuizCheck = props.setBookOrQuizCheck,\r\n    mtbCheck = props.mtbCheck,\r\n    setMtbCheck = props.setMtbCheck,\r\n    musicCheck = props.musicCheck,\r\n    setMusicCheck = props.setMusicCheck,\r\n    wasYesterdayJealous = props.wasYesterdayJealous,\r\n    setWasYesterdayJealous = props.setWasYesterdayJealous;\r\n\r\n  const classes = useStyles();\r\n\r\n  const quotesList = [\r\n    \"Happiness/Achievement/Pride, when you defect the shittier version of yourself\",\r\n    \"If there is no enemy within, the enemy outside can do us no harm\",\r\n  ];\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Quotes quotesList={quotesList} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormGroup row className={classes.marginTop15}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={legMassage}\r\n                onChange={(e) => setLegMassage(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Leg Massage for Mother?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={motherExercise}\r\n                onChange={(e) => setMotherExercise(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Did Mother do Exercise Today?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={soakDhaniya}\r\n                onChange={(e) => setSoakDhaniya(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Soak Dhaniya in water overnight?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={retinaCheck}\r\n                onChange={(e) => setRetinaCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Did I apply Retina cream and moisturizer before sleep?\"\r\n          />\r\n        </FormGroup>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id=\"standard4\"\r\n          label=\"To whom and all, was I nice today?\"\r\n          value={niceToday}\r\n          onChange={(e) => setNiceToday(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id=\"standard5\"\r\n          label=\"Rate yourself, out of 10?\"\r\n          value={rateUrself}\r\n          onChange={(e) => setRateUrself(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormGroup row className={classes.marginTop15}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={wasIBestCheck}\r\n                onChange={(e) => setWasIBestCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Was this my Best?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={wasYesterdayJealous}\r\n                onChange={(e) => setWasYesterdayJealous(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Atleast, Was my yesterday jealous of my today?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={bookOrQuizCheck}\r\n                onChange={(e) => setBookOrQuizCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Read a book or JavaScript Quiz?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={mtbCheck}\r\n                onChange={(e) => setMtbCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"I didn't mCode today?\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={musicCheck}\r\n                onChange={(e) => setMusicCheck(e.target.checked)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"In sleep, Listen to audio version of yourself, you want to be?\"\r\n          />\r\n        </FormGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\n//Material UI Components\nimport {\n  Container,\n  makeStyles,\n  Button,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\n//Sub Components\nimport Header from \"./Header\";\nimport AccordionItem from \"./AccordionItem\";\nimport AgeIndicator from \"./AgeIndicator\";\n//import PomodoroTimer from \"./PomodoroTimer\";\nimport GratitudeList from \"./GratitudeList\";\nimport MorningCheckList from \"./MorningCheckList\";\nimport EveningCheckList from \"./EveningCheckList\";\nimport YearGoals from \"./YearGoals\";\nimport TopYearGoals from \"./TopYearGoals\";\nimport MonthEndGoals from \"./MonthEndGoals\";\nimport WeekEndGoals from \"./WeekEndGoals\";\nimport ToDoList from \"./ToDoList\";\nimport NightCheckList from \"./NightCheckList\";\nimport Quotes from \"./Quotes\";\n\nconst today = moment();\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: \"20px\",\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  paddingTop30: {\n    paddingTop: \"30px\",\n  },\n  dateHolder: {\n    marginTop: \"85px\",\n    background: \"#00e5ff\",\n    padding: \"4px 15px\",\n    borderRadius: \"10px 10px 0 0\",\n    fontSize: \"13px\",\n    fontWeight: \"500\",\n  },\n  mainContainer: {\n    padding: \"24px\",\n    backgroundColor: \"#f5f5f5\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navBar: {\n    \"& li\": {\n      width: \"250px\",\n    },\n  },\n  saveButtonHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\",\n    marginTop: \"20px\",\n  },\n}));\n\nexport default function App(props) {\n  const [expanded, setExpanded] = React.useState(false);\n  //const [expanded, setExpanded] = React.useState(\"panel8\");\n  const [selectedDate, setSelectedDate] = React.useState(today);\n  const [cycle, setCycle] = useState(0);\n\n  //Sub Components Lists\n  const [gratitudeList, setGratitudeList] = useState([\n    { value: \"\", label: \"I'm Grateful for\" },\n  ]);\n  const [motherCare, setMotherCare] = useState(\"\");\n  const [todayFeeling, setTodayFeeling] = useState(\"\");\n  const [meditationCheck, setMeditationCheck] = useState(false);\n  const [sunScreenMorCheck, setSunScreenMorCheck] = useState(false);\n  const [exerciseCheck, setExerciseCheck] = useState(false);\n  const [yearGoalsList, setYearGoalsList] = useState([\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n  ]);\n  const [yearTopGoalsList, setYearTopGoalsList] = useState([\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n    { value: \"\", label: \"By this year end, I'll achieve\" },\n  ]);\n  const [monthGoalsList, setMonthGoalsList] = useState([\n    { value: \"\", label: \"I'll achieve\", group: 0 },\n    { value: \"\", label: \"I'll achieve\", group: 0 },\n    { value: \"\", label: \"I'll achieve\", group: 1 },\n    { value: \"\", label: \"I'll achieve\", group: 1 },\n    { value: \"\", label: \"I'll achieve\", group: 2 },\n    { value: \"\", label: \"I'll achieve\", group: 2 },\n  ]);\n  const [weekGoalsList, setWeekGoalsList] = useState([\n    { value: \"\", label: \"I'll finish\", group: 0 },\n    { value: \"\", label: \"I'll finish\", group: 0 },\n    { value: \"\", label: \"I'll finish\", group: 1 },\n    { value: \"\", label: \"I'll finish\", group: 1 },\n    { value: \"\", label: \"I'll finish\", group: 2 },\n    { value: \"\", label: \"I'll finish\", group: 2 },\n  ]);\n  const [todoList, setTodoList] = useState([\n    { value: \"\", label: \"I'll do\", group: 0 },\n    { value: \"\", label: \"I'll do\", group: 0 },\n    { value: \"\", label: \"I'll do\", group: 1 },\n    { value: \"\", label: \"I'll do\", group: 1 },\n    { value: \"\", label: \"I'll do\", group: 2 },\n    { value: \"\", label: \"I'll do\", group: 2 },\n  ]);\n  const [sunScreenEveCheck, setSunScreenEveCheck] = useState(false);\n  const [rawVegIntakeCheck, setRawVegIntakeCheck] = useState(false);\n  const [waterCheck, setWaterCheck] = useState(false);\n  const [legMassage, setLegMassage] = useState(false);\n  const [motherExercise, setMotherExercise] = useState(false);\n  const [soakDhaniya, setSoakDhaniya] = useState(false);\n  const [retinaCheck, setRetinaCheck] = useState(false);\n  const [niceToday, setNiceToday] = useState(\"\");\n  const [rateUrself, setRateUrself] = useState(\"\");\n  const [wasIBestCheck, setWasIBestCheck] = useState(false);\n  const [bookOrQuizCheck, setBookOrQuizCheck] = useState(false);\n  const [mtbCheck, setMtbCheck] = useState(false);\n  const [musicCheck, setMusicCheck] = useState(false);\n  const [wasYesterdayJealous, setWasYesterdayJealous] = useState(false);\n\n  useEffect(() => {\n    //load values from local storaqge\n    const localStorageObj = JSON.parse(\n      localStorage.getItem(today.format(\"DDMMYYYY\"))\n    );\n\n    if (localStorageObj) {\n      setGratitudeList(localStorageObj.gratitudeList);\n      setMotherCare(localStorageObj.motherCare);\n      setTodayFeeling(localStorageObj.todayFeeling);\n      setMeditationCheck(localStorageObj.meditationCheck);\n      setExerciseCheck(localStorageObj.exerciseCheck);\n      setYearGoalsList(localStorageObj.yearGoalsList);\n      setYearTopGoalsList(localStorageObj.yearTopGoalsList);\n      setMonthGoalsList(localStorageObj.monthGoalsList);\n      setWeekGoalsList(localStorageObj.weekGoalsList);\n      setTodoList(localStorageObj.todoList);\n      setLegMassage(localStorageObj.legMassage);\n      setMotherExercise(localStorageObj.motherExercise);\n      setSunScreenMorCheck(localStorageObj.sunScreenMorCheck);\n      setSunScreenEveCheck(localStorageObj.sunScreenEveCheck);\n      setRawVegIntakeCheck(localStorageObj.rawVegIntakeCheck);\n      setWaterCheck(localStorageObj.waterCheck);\n      setRetinaCheck(localStorageObj.retinaCheck);\n      setSoakDhaniya(localStorageObj.soakDhaniya);\n      setNiceToday(localStorageObj.niceToday);\n      setRateUrself(localStorageObj.rateUrself);\n      setWasIBestCheck(localStorageObj.wasIBestCheck);\n      setBookOrQuizCheck(localStorageObj.bookOrQuizCheck);\n      setMtbCheck(localStorageObj.mtbCheck);\n      setMusicCheck(localStorageObj.musicCheck);\n      setWasYesterdayJealous(localStorageObj.wasYesterdayJealous);\n    }\n\n    //Keep System Awake all the time\n    // The wake lock sentinel.\n    let wakeLock = null;\n\n    // Function that attempts to request a screen wake lock.\n    const requestWakeLock = async () => {\n      try {\n        wakeLock = await navigator.wakeLock.request(\"screen\");\n        wakeLock.addEventListener(\"release\", () => {\n          console.log(\"Soldier Screen Wake Lock was released\");\n        });\n        console.log(\"Soldier Screen Wake Lock is active\");\n      } catch (err) {\n        console.error(`Soldier ${err.name}, ${err.message}`);\n      }\n    };\n\n    // Request a screen wake lock…\n    requestWakeLock();\n\n    // Reacquire the screen wake lock,\n    const handleVisibilityChange = () => {\n      if (wakeLock !== null && document.visibilityState === \"visible\") {\n        console.log(\"Soldier reacquire the screen wake lock\");\n        requestWakeLock();\n      }\n    };\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      wakeLock.release();\n    };\n  }, []);\n\n  const classes = useStyles();\n  const dob = \"1961-05-16\";\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const HandleSave = () => {\n    let saveObj = {\n      gratitudeList,\n      motherCare,\n      todayFeeling,\n      meditationCheck,\n      sunScreenMorCheck,\n      exerciseCheck,\n      yearGoalsList,\n      yearTopGoalsList,\n      monthGoalsList,\n      weekGoalsList,\n      todoList,\n      legMassage,\n      motherExercise,\n      sunScreenEveCheck,\n      rawVegIntakeCheck,\n      waterCheck,\n      retinaCheck,\n      soakDhaniya,\n      niceToday,\n      rateUrself,\n      wasIBestCheck,\n      bookOrQuizCheck,\n      mtbCheck,\n      musicCheck,\n      wasYesterdayJealous,\n    };\n    localStorage.setItem(\n      selectedDate.format(\"DDMMYYYY\"),\n      JSON.stringify(saveObj)\n    );\n  };\n\n  const quotesList = [\n    \"Your problem isn't the problem, your reaction is the problem\",\n    \"Keep Calm and Be the Fighter\",\n    \"Ego/Jealous - Bending down is becoming tough - then remember a day/job in microcristal\",\n    \"If your mind/ situation says - Mother is wrong. Remember when you lost Father, only thing learnt was to blindly listen Mother\",\n    \"Everyday/ hour/ minute is minuscule of the whole life you want was a gift by your parents(never hurt them), plan & play accordingly\",\n    \"Pain will leave, once it has finished teaching you\",\n    \"Attack your Goals like your life depends on it\",\n    \"Excellence happens not by accident. It is a process.\",\n    \"Warriors are not the ones who always win, but the ones that always fight\",\n    \"Our greatest weakness lies in giving up. The most certain way to succeed is always to try just one more time\",\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Header\n        history={props.history}\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        setGratitudeList={setGratitudeList}\n        setMotherCare={setMotherCare}\n        setSunScreenMorCheck={setSunScreenMorCheck}\n        setTodayFeeling={setTodayFeeling}\n        setMeditationCheck={setMeditationCheck}\n        setExerciseCheck={setExerciseCheck}\n        setYearGoalsList={setYearGoalsList}\n        setYearTopGoalsList={setYearTopGoalsList}\n        setMonthGoalsList={setMonthGoalsList}\n        setWeekGoalsList={setWeekGoalsList}\n        setTodoList={setTodoList}\n        setLegMassage={setLegMassage}\n        setMotherExercise={setMotherExercise}\n        setRetinaCheck={setRetinaCheck}\n        setSoakDhaniya={setSoakDhaniya}\n        setNiceToday={setNiceToday}\n        setRateUrself={setRateUrself}\n        setWasIBestCheck={setWasIBestCheck}\n        setBookOrQuizCheck={setBookOrQuizCheck}\n        setMtbCheck={setMtbCheck}\n        setMusicCheck={setMusicCheck}\n        setWasYesterdayJealous={setWasYesterdayJealous}\n        setSunScreenEveCheck={setSunScreenEveCheck}\n        setRawVegIntakeCheck={setRawVegIntakeCheck}\n        setWaterCheck={setWaterCheck}\n      />\n\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Typography className={classes.dateHolder}>\n            {selectedDate.format(\"MMMM Do YYYY\")}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Container maxWidth=\"lg\" className={classes.mainContainer}>\n        <Quotes quotesList={quotesList} mainPage={true} />\n        <AgeIndicator dob={dob} />\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel1\"}\n          headLine={\"Gratitude List\"}\n        >\n          <GratitudeList\n            gratitudeList={gratitudeList}\n            setGratitudeList={setGratitudeList}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel2\"}\n          headLine={\"Morning CheckList\"}\n        >\n          <MorningCheckList\n            motherCare={motherCare}\n            setMotherCare={setMotherCare}\n            sunScreenMorCheck={sunScreenMorCheck}\n            setSunScreenMorCheck={setSunScreenMorCheck}\n            todayFeeling={todayFeeling}\n            setTodayFeeling={setTodayFeeling}\n            meditationCheck={meditationCheck}\n            setMeditationCheck={setMeditationCheck}\n            exerciseCheck={exerciseCheck}\n            setExerciseCheck={setExerciseCheck}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel3\"}\n          headLine={\"Year End Goals\"}\n        >\n          <YearGoals\n            yearGoalsList={yearGoalsList}\n            setYearGoalsList={setYearGoalsList}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel4\"}\n          headLine={\"Prioritize: Top 3 Goals\"}\n        >\n          <TopYearGoals\n            yearGoalsList={yearGoalsList}\n            yearTopGoalsList={yearTopGoalsList}\n            setYearTopGoalsList={setYearTopGoalsList}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel5\"}\n          headLine={\"Month End Goals\"}\n        >\n          <MonthEndGoals\n            yearTopGoalsList={yearTopGoalsList}\n            monthGoalsList={monthGoalsList}\n            setMonthGoalsList={setMonthGoalsList}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel6\"}\n          headLine={\"Week End Goals\"}\n        >\n          <WeekEndGoals\n            yearTopGoalsList={yearTopGoalsList}\n            weekGoalsList={weekGoalsList}\n            setWeekGoalsList={setWeekGoalsList}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel7\"}\n          headLine={\"Today - To Do List\"}\n        >\n          <ToDoList\n            yearTopGoalsList={yearTopGoalsList}\n            todoList={todoList}\n            setTodoList={setTodoList}\n          />\n        </AccordionItem>\n\n        {/* <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel8\"}\n          headLine={`Pomodoro Timer (${cycle})`}\n        >\n          <PomodoroTimer cycle={cycle} setCycle={setCycle} />\n        </AccordionItem> */}\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel8\"}\n          headLine={\"Evening CheckList\"}\n        >\n          <EveningCheckList\n            sunScreenEveCheck={sunScreenEveCheck}\n            setSunScreenEveCheck={setSunScreenEveCheck}\n            rawVegIntakeCheck={rawVegIntakeCheck}\n            setRawVegIntakeCheck={setRawVegIntakeCheck}\n            waterCheck={waterCheck}\n            setWaterCheck={setWaterCheck}\n          />\n        </AccordionItem>\n\n        <AccordionItem\n          expanded={expanded}\n          handleAccordionChange={handleAccordionChange}\n          panelId={\"panel9\"}\n          headLine={\"Night CheckList\"}\n        >\n          <NightCheckList\n            legMassage={legMassage}\n            setLegMassage={setLegMassage}\n            motherExercise={motherExercise}\n            setMotherExercise={setMotherExercise}\n            retinaCheck={retinaCheck}\n            setRetinaCheck={setRetinaCheck}\n            soakDhaniya={soakDhaniya}\n            setSoakDhaniya={setSoakDhaniya}\n            niceToday={niceToday}\n            setNiceToday={setNiceToday}\n            rateUrself={rateUrself}\n            setRateUrself={setRateUrself}\n            wasIBestCheck={wasIBestCheck}\n            setWasIBestCheck={setWasIBestCheck}\n            bookOrQuizCheck={bookOrQuizCheck}\n            setBookOrQuizCheck={setBookOrQuizCheck}\n            mtbCheck={mtbCheck}\n            setMtbCheck={setMtbCheck}\n            musicCheck={musicCheck}\n            setMusicCheck={setMusicCheck}\n            wasYesterdayJealous={wasYesterdayJealous}\n            setWasYesterdayJealous={setWasYesterdayJealous}\n          />\n        </AccordionItem>\n        <div className={classes.saveButtonHolder}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<SaveIcon />}\n            onClick={HandleSave}\n          >\n            Save The Plan\n          </Button>\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\n//Sub Components\r\nimport Header from \"./Header\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: \"100px\",\r\n    padding: \"24px\",\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n}));\r\n\r\nexport default function HabitTracker(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Header history={props.history} />\r\n\r\n      <Container maxWidth=\"lg\" className={classes.mainContainer}>\r\n        <h2>HabitTracker</h2>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\n//Sub Components\r\nimport Header from \"./Header\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: \"100px\",\r\n    padding: \"24px\",\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n}));\r\n\r\nexport default function WorkGround(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Header history={props.history} />\r\n\r\n      <Container maxWidth=\"lg\" className={classes.mainContainer}>\r\n        <h2>WorkGround</h2>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// pick a date util library\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\n//Route Components\r\nimport App from \"./App\";\r\nimport HabitTracker from \"./HabitTracker\";\r\nimport WorkGround from \"./WorkGround\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#00e5ff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function AppContainer() {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={App} />\r\n            <Route path=\"/habit\" component={HabitTracker} />\r\n            <Route path=\"/workground\" component={WorkGround} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport AppContainer from \"./Components/AppContainer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}